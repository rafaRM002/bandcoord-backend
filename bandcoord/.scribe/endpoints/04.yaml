name: 'Gestión de Eventos'
description: |-

  APIs para gestionar eventos musicales
endpoints:
  -
    httpMethods:
      - GET
    uri: api/eventos
    metadata:
      groupName: 'Gestión de Eventos'
      groupDescription: |-

        APIs para gestionar eventos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todos los eventos'
      description: 'Obtiene una lista de todos los eventos registrados en el sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Eventos obtenidos correctamente.",
             "eventos": [
               {
                 "id": 1,
                 "nombre": "Ensayo General",
                 "fecha": "2025-06-15",
                 "lugar": "Sala de Ensayos Principal",
                 "hora": "19:00",
                 "estado": "planificado",
                 "tipo": "ensayo",
                 "entidad_id": 1
               }
             ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
             "error": "Hubo un problema al obtener los eventos.",
             "message": "Error message here"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/eventos
    metadata:
      groupName: 'Gestión de Eventos'
      groupDescription: |-

        APIs para gestionar eventos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un nuevo evento'
      description: 'Crea un nuevo evento con los datos proporcionados.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del evento.'
        required: true
        example: 'Ensayo General'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fecha:
        name: fecha
        description: 'Fecha del evento (Y-m-d).'
        required: true
        example: '2025-06-15'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lugar:
        name: lugar
        description: 'Lugar donde se realizará el evento.'
        required: true
        example: 'Sala de Ensayos Principal'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hora:
        name: hora
        description: 'Hora del evento (H:i).'
        required: true
        example: '19:00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      estado:
        name: estado
        description: 'Estado del evento (planificado, en progreso, finalizado).'
        required: true
        example: planificado
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tipo:
        name: tipo
        description: 'Tipo de evento (ensayo, procesion, concierto, pasacalles).'
        required: true
        example: ensayo
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entidad_id:
        name: entidad_id
        description: 'ID de la entidad asociada.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: 'Ensayo General'
      fecha: '2025-06-15'
      lugar: 'Sala de Ensayos Principal'
      hora: '19:00'
      estado: planificado
      tipo: ensayo
      entidad_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Evento creado correctamente.",
             "evento": {
               "id": 1,
               "nombre": "Ensayo General",
               "fecha": "2025-06-15",
               "lugar": "Sala de Ensayos Principal",
               "hora": "19:00",
               "estado": "planificado",
               "tipo": "ensayo",
               "entidad_id": 1
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
               "nombre": ["El campo nombre es obligatorio."]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/eventos/{id}'
    metadata:
      groupName: 'Gestión de Eventos'
      groupDescription: |-

        APIs para gestionar eventos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener un evento específico'
      description: 'Muestra la información detallada de un evento específico.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID del evento.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Evento obtenido correctamente.",
             "evento": {
               "id": 1,
               "nombre": "Ensayo General",
               "fecha": "2025-06-15",
               "lugar": "Sala de Ensayos Principal",
               "hora": "19:00",
               "estado": "planificado",
               "tipo": "ensayo",
               "entidad_id": 1
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "error": "Evento no encontrado.",
             "message": "El evento con el ID 1 no existe."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/eventos/{id}'
    metadata:
      groupName: 'Gestión de Eventos'
      groupDescription: |-

        APIs para gestionar eventos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar un evento'
      description: 'Actualiza la información de un evento existente.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID del evento.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del evento.'
        required: false
        example: 'Ensayo General Actualizado'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fecha:
        name: fecha
        description: 'Fecha del evento (Y-m-d).'
        required: false
        example: '2025-06-16'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      lugar:
        name: lugar
        description: 'Lugar donde se realizará el evento.'
        required: false
        example: 'Sala de Ensayos Secundaria'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hora:
        name: hora
        description: 'Hora del evento (H:i).'
        required: false
        example: '20:00'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      estado:
        name: estado
        description: 'Estado del evento (planificado, en progreso, finalizado).'
        required: false
        example: 'en progreso'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      tipo:
        name: tipo
        description: 'Tipo de evento (ensayo, procesion, concierto, pasacalles).'
        required: false
        example: ensayo
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      entidad_id:
        name: entidad_id
        description: 'ID de la entidad asociada.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: 'Ensayo General Actualizado'
      fecha: '2025-06-16'
      lugar: 'Sala de Ensayos Secundaria'
      hora: '20:00'
      estado: 'en progreso'
      tipo: ensayo
      entidad_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Evento actualizado correctamente.",
             "evento": {
               "id": 1,
               "nombre": "Ensayo General Actualizado",
               "fecha": "2025-06-16",
               "lugar": "Sala de Ensayos Secundaria",
               "hora": "20:00",
               "estado": "en progreso",
               "tipo": "ensayo",
               "entidad_id": 1
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "error": "Evento no encontrado.",
             "message": "El evento con el ID 1 no existe."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/eventos/{id}'
    metadata:
      groupName: 'Gestión de Eventos'
      groupDescription: |-

        APIs para gestionar eventos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un evento'
      description: 'Elimina un evento específico del sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'El ID del evento a eliminar.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Evento eliminado correctamente."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "error": "Evento no encontrado.",
             "message": "El evento con el ID 1 no existe."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
