## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestión de Mínimos por Evento'
description: |-

  APIs para gestionar los mínimos de instrumentos requeridos por evento
endpoints:
  -
    httpMethods:
      - GET
    uri: api/minimos-evento
    metadata:
      groupName: 'Gestión de Mínimos por Evento'
      groupDescription: |-

        APIs para gestionar los mínimos de instrumentos requeridos por evento
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar Mínimos por Evento'
      description: 'Obtiene un listado de todos los mínimos de instrumentos requeridos por cada evento.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Listado de mínimos por evento obtenido correctamente.",
              "data": [{
                  "evento_id": 1,
                  "instrumento_tipo_id": "GUITARRA",
                  "cantidad": 2,
                  "evento": {
                      "id": 1,
                      "nombre": "Concierto Example"
                  },
                  "tipoInstrumento": {
                      "instrumento": "GUITARRA",
                      "nombre": "Guitarra"
                  }
              }]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Error al obtener los mínimos por evento.",
              "message": "Mensaje de error específico"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/minimos-evento
    metadata:
      groupName: 'Gestión de Mínimos por Evento'
      groupDescription: |-

        APIs para gestionar los mínimos de instrumentos requeridos por evento
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear Mínimo por Evento'
      description: 'Crea un nuevo registro de mínimo de instrumentos requeridos para un evento.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      evento_id:
        name: evento_id
        description: 'ID del evento.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      instrumento_tipo_id:
        name: instrumento_tipo_id
        description: 'ID del tipo de instrumento.'
        required: true
        example: GUITARRA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      cantidad:
        name: cantidad
        description: 'Cantidad mínima requerida del instrumento. Mínimo: 1.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      evento_id: 1
      instrumento_tipo_id: GUITARRA
      cantidad: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Mínimo de instrumento creado correctamente.",
              "data": {
                  "evento_id": 1,
                  "instrumento_tipo_id": "GUITARRA",
                  "cantidad": 2
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "error": {
                  "evento_id": ["El evento seleccionado no existe."],
                  "instrumento_tipo_id": ["El tipo de instrumento ya existe para este evento."],
                  "cantidad": ["La cantidad debe ser al menos 1."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/minimos-evento/{evento_id}/{instrumento_tipo_id}'
    metadata:
      groupName: 'Gestión de Mínimos por Evento'
      groupDescription: |-

        APIs para gestionar los mínimos de instrumentos requeridos por evento
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener Mínimo Específico'
      description: 'Obtiene el detalle de un mínimo de instrumento específico para un evento.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      evento_id:
        name: evento_id
        description: 'ID del evento.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      instrumento_tipo_id:
        name: instrumento_tipo_id
        description: 'ID del tipo de instrumento.'
        required: true
        example: GUITARRA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      evento_id: 1
      instrumento_tipo_id: GUITARRA
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Mínimo de instrumento obtenido correctamente.",
              "data": {
                  "evento_id": 1,
                  "instrumento_tipo_id": "GUITARRA",
                  "cantidad": 2,
                  "evento": {
                      "id": 1,
                      "nombre": "Concierto Example"
                  },
                  "tipoInstrumento": {
                      "instrumento": "GUITARRA",
                      "nombre": "Guitarra"
                  }
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "error": "Mínimo de instrumento no encontrado."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/minimos-evento/{evento_id}/{instrumento_tipo_id}'
    metadata:
      groupName: 'Gestión de Mínimos por Evento'
      groupDescription: |-

        APIs para gestionar los mínimos de instrumentos requeridos por evento
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar Mínimo por Evento'
      description: 'Actualiza la cantidad mínima requerida de un instrumento para un evento específico.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      evento_id:
        name: evento_id
        description: 'ID del evento.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      instrumento_tipo_id:
        name: instrumento_tipo_id
        description: 'ID del tipo de instrumento.'
        required: true
        example: GUITARRA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      evento_id: 1
      instrumento_tipo_id: GUITARRA
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      cantidad:
        name: cantidad
        description: 'Nueva cantidad mínima requerida. Mínimo: 1.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      cantidad: 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Registro actualizado correctamente."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "No se encontró el registro para actualizar."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "error": {
                  "cantidad": ["La cantidad debe ser al menos 1."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/minimos-evento/{evento_id}/{instrumento_tipo_id}'
    metadata:
      groupName: 'Gestión de Mínimos por Evento'
      groupDescription: |-

        APIs para gestionar los mínimos de instrumentos requeridos por evento
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar Mínimo por Evento'
      description: 'Elimina un registro de mínimo de instrumentos requeridos para un evento.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      evento_id:
        name: evento_id
        description: 'ID del evento.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      instrumento_tipo_id:
        name: instrumento_tipo_id
        description: 'ID del tipo de instrumento.'
        required: true
        example: GUITARRA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      evento_id: 1
      instrumento_tipo_id: GUITARRA
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Registro eliminado correctamente."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "error": "Registro no encontrado."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
