## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestión de Instrumentos'
description: |-

  APIs para gestionar instrumentos musicales
endpoints:
  -
    httpMethods:
      - GET
    uri: api/instrumentos
    metadata:
      groupName: 'Gestión de Instrumentos'
      groupDescription: |-

        APIs para gestionar instrumentos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todos los instrumentos'
      description: 'Obtiene una lista de todos los instrumentos registrados en el sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "numero_serie": "ABC123",
               "estado": "disponible",
               "instrumento_tipo_id": "Trompeta",
               "created_at": "2025-06-10T10:00:00.000000Z",
               "updated_at": "2025-06-10T10:00:00.000000Z"
             }
           ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Error al obtener la lista de instrumentos.",
           "message": "Mensaje de error específico"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/instrumentos
    metadata:
      groupName: 'Gestión de Instrumentos'
      groupDescription: |-

        APIs para gestionar instrumentos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear un nuevo instrumento'
      description: 'Crea un nuevo instrumento con los datos proporcionados.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      numero_serie:
        name: numero_serie
        description: 'El número de serie único del instrumento.'
        required: true
        example: ABC123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      estado:
        name: estado
        description: 'Estado del instrumento (prestado, disponible, en reparacion).'
        required: true
        example: disponible
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      instrumento_tipo_id:
        name: instrumento_tipo_id
        description: 'Tipo de instrumento (Trompeta, Fliscorno, Trombon, Bombardino, Tuba, Corneta, Caja, Tambor, other).'
        required: true
        example: Trompeta
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      numero_serie: ABC123
      estado: disponible
      instrumento_tipo_id: Trompeta
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "numero_serie": "ABC123",
           "estado": "disponible",
           "instrumento_tipo_id": "Trompeta",
           "created_at": "2025-06-10T10:00:00.000000Z",
           "updated_at": "2025-06-10T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
             "numero_serie": ["El número de serie es obligatorio."],
             "estado": ["El estado debe ser uno de los siguientes: prestado, disponible, en reparacion."],
             "instrumento_tipo_id": ["El tipo de instrumento es obligatorio."]
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Error al crear el instrumento.",
           "message": "Mensaje de error específico"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/instrumentos/{id}'
    metadata:
      groupName: 'Gestión de Instrumentos'
      groupDescription: |-

        APIs para gestionar instrumentos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Mostrar un instrumento específico'
      description: 'Obtiene los detalles de un instrumento específico por su número de serie.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the instrumento.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_serie:
        name: numero_serie
        description: 'El número de serie del instrumento.'
        required: true
        example: ABC123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      numero_serie: ABC123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "numero_serie": "ABC123",
           "estado": "disponible",
           "instrumento_tipo_id": "Trompeta",
           "created_at": "2025-06-10T10:00:00.000000Z",
           "updated_at": "2025-06-10T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "El instrumento con este número de serie no existe."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Error al buscar el instrumento.",
           "message": "Mensaje de error específico"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/instrumentos/{id}'
    metadata:
      groupName: 'Gestión de Instrumentos'
      groupDescription: |-

        APIs para gestionar instrumentos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar un instrumento'
      description: 'Actualiza los datos de un instrumento existente.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the instrumento.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_serie:
        name: numero_serie
        description: 'El número de serie del instrumento a actualizar.'
        required: true
        example: ABC123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      numero_serie: ABC123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      estado:
        name: estado
        description: 'Nuevo estado del instrumento (prestado, disponible, en reparacion).'
        required: true
        example: prestado
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      instrumento_tipo_id:
        name: instrumento_tipo_id
        description: 'Nuevo tipo de instrumento.'
        required: true
        example: Trompeta
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      estado: prestado
      instrumento_tipo_id: Trompeta
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "numero_serie": "ABC123",
           "estado": "prestado",
           "instrumento_tipo_id": "Trompeta",
           "created_at": "2025-06-10T10:00:00.000000Z",
           "updated_at": "2025-06-10T10:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "Instrumento no encontrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "error": {
             "estado": ["El estado debe ser uno de los siguientes: prestado, disponible, en reparacion."],
             "instrumento_tipo_id": ["El tipo de instrumento no es válido."]
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Error al actualizar el instrumento.",
           "message": "Mensaje de error específico"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/instrumentos/{id}'
    metadata:
      groupName: 'Gestión de Instrumentos'
      groupDescription: |-

        APIs para gestionar instrumentos musicales
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar un instrumento'
      description: 'Elimina un instrumento específico del sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the instrumento.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      numero_serie:
        name: numero_serie
        description: 'El número de serie del instrumento a eliminar.'
        required: true
        example: ABC123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      numero_serie: ABC123
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Instrumento eliminado correctamente."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "El instrumento con este número de serie no existe."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "error": "Error al eliminar el instrumento.",
           "message": "Mensaje de error específico"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
