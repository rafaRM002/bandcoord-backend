## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestión de Autenticación'
description: |-

  APIs para gestionar la autenticación de usuarios, registro y gestión de perfiles
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'Gestión de Autenticación'
      groupDescription: |-

        APIs para gestionar la autenticación de usuarios, registro y gestión de perfiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Registrar nuevo usuario'
      description: 'Registra un nuevo usuario en el sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nombre:
        name: nombre
        description: 'Nombre del usuario.'
        required: true
        example: Juan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido1:
        name: apellido1
        description: 'Primer apellido del usuario.'
        required: true
        example: García
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido2:
        name: apellido2
        description: 'opcional Segundo apellido del usuario.'
        required: false
        example: López
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Correo electrónico del usuario.'
        required: true
        example: juan.garcia@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'opcional Número de teléfono del usuario.'
        required: false
        example: '612345678'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario (mínimo 8 caracteres).'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      fecha_nac:
        name: fecha_nac
        description: 'opcional Fecha de nacimiento del usuario.'
        required: false
        example: '1990-01-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nombre: Juan
      apellido1: García
      apellido2: López
      email: juan.garcia@ejemplo.com
      telefono: '612345678'
      password: password123
      fecha_nac: '1990-01-01'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "message": "Usuario registrado correctamente. Esperando aprobación del administrador.",
              "usuario": {
                  "nombre": "Juan",
                  "apellido1": "García",
                  "email": "juan.garcia@ejemplo.com",
                  "estado": "pendiente",
                  "role": "miembro",
                  "updated_at": "2025-06-10T12:00:00.000000Z",
                  "created_at": "2025-06-10T12:00:00.000000Z",
                  "id": 1
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {
                  "email": ["El correo electrónico ya está en uso."],
                  "password": ["La contraseña debe tener al menos 8 caracteres."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'Gestión de Autenticación'
      groupDescription: |-

        APIs para gestionar la autenticación de usuarios, registro y gestión de perfiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Iniciar sesión'
      description: 'Autentifica al usuario y devuelve un token de acceso.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Correo electrónico del usuario.'
        required: true
        example: juan.garcia@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: juan.garcia@ejemplo.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "token": "1|abcdef123456..."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Las credenciales son incorrectas."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Tu cuenta está pendiente de aprobación por un administrador."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "message": "El usuario no existe."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: 'Gestión de Autenticación'
      groupDescription: |-

        APIs para gestionar la autenticación de usuarios, registro y gestión de perfiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Cerrar sesión'
      description: 'Cierra la sesión del usuario actual invalidando el token.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Sesión cerrada correctamente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
